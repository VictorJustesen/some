{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postid\n}) => {\n  _s();\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Move the useQuery hook here instead of inside the comments function.\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postid=\" + postid).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comments\", newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postid\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./upload/\" + currentUser.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\",\n        onChange: e => setDesc(e.target.value),\n        value: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./upload/\" + comment.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timeago\",\n        children: moment(comment.createdat).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"Fsi/C5X0aJaIFg1YxzJ6bbBdWOc=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["AuthContext","useContext","useState","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postid","_s","desc","setDesc","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilepic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","onClick","map","comment","name","createdat","fromNow","id","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\n\nconst Comments = ({ postid }) => {\n    const [desc, setDesc] = useState(\"\")\n    const { currentUser } = useContext(AuthContext);\n    \n    // Move the useQuery hook here instead of inside the comments function.\n    const { isLoading, error, data } = useQuery([\"comments\"], () =>\n        makeRequest.get(\"/comments?postid=\" + postid).then((res) => {\n            return res.data;\n        })\n    );\n\n    const queryClient = useQueryClient();\n\n    const mutation = useMutation(\n      (newComment) => {\n        return makeRequest.post(\"/comments\", newComment);\n      },\n      {\n        onSuccess: () => {\n          // Invalidate and refetch\n          queryClient.invalidateQueries([\"comments\"]);\n        },\n      }\n    );\n  \n   \n    \n    const handleClick = async (e) => {\n      e.preventDefault();\n      \n      mutation.mutate({ desc, postid });\n      setDesc(\"\");\n     \n    };\n  \n\n    return (\n        <div className=\"comments\">\n            <div className=\"write\">\n                <img src={\"./upload/\"+currentUser.profilepic} alt=\"picture\" />\n                <input type=\"text\"\n                 placeholder=\"Write a comment\" \n                 onChange={e=>setDesc(e.target.value)}\n                 value={desc} />\n                <button onClick={handleClick}>Send</button>\n            </div>\n            {isLoading ? (\n                \"loading\"\n            ) : (\n                data.map(comment => (\n                    <div key={comment.id} className=\"comment\">\n                        <img src={\"./upload/\"+comment.profilepic} alt=\"picture\" />\n                        <div className=\"info\">\n                            <span>{comment.name}</span>\n                            <p>{comment.desc}</p>\n                        </div>\n                        <span className=\"timeago\">\n                            {moment(comment.createdat).fromNow()}\n                        </span>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}