{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/Code/Projects/some/someui/src/components/update/Update.jsx\",\n  _s = $RefreshSig$();\nimport \"./update.scss\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Update = ({\n  setOpenUpdate,\n  user\n}) => {\n  _s();\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    website: \"\",\n    city: \"\"\n  });\n  const handleChange = e => {\n    setInputs(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const upload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const queryClient = useQueryClient();\n  const mutation = useMutation(user => {\n    return makeRequest.put(\"/users\", user);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"user\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    let coverUrl;\n    let profileUrl;\n    coverUrl = cover ? await upload(cover) : user.coverpic;\n    profileUrl = profile ? await upload(profile) : user.profilepic;\n    const updatedInfo = {\n      coverpic: coverUrl,\n      profilepic: profileUrl\n    };\n\n    // Only include fields in the mutation that have values\n    for (let key in inputs) {\n      if (inputs[key].trim()) {\n        // Check if the string is not empty or just whitespace\n        updatedInfo[key] = inputs[key];\n      }\n    }\n    mutation.mutate(updatedInfo);\n    setOpenUpdate(false);\n    setCover(null);\n    setProfile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"coverpicture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setCover(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"profilepicture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setProfile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"website\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenUpdate(false),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Update, \"ObXWxpfvLAj4FeBRQ9bF+MBV8Uc=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useMutation","useQueryClient","makeRequest","useState","jsxDEV","_jsxDEV","Update","setOpenUpdate","user","_s","cover","setCover","profile","setProfile","inputs","setInputs","name","website","city","handleChange","e","prev","target","value","upload","file","formData","FormData","append","res","post","data","err","console","log","queryClient","mutation","put","onSuccess","invalidateQueries","handleClick","preventDefault","coverUrl","profileUrl","coverpic","profilepic","updatedInfo","key","trim","mutate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","onChange","files","onClick","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/Code/Projects/some/someui/src/components/update/Update.jsx"],"sourcesContent":["import \"./update.scss\"\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport {useState} from 'react'\n\nexport const Update = ({setOpenUpdate, user}) => {\n\n  const [cover,setCover] = useState(null)\n  const [profile,setProfile] = useState(null)\n  const [inputs,setInputs] = useState({\n    name:\"\",\n    website:\"\",\n    city:\"\",\n    \n  });\n\n  const handleChange= e => {\n    setInputs((prev)=> ({...prev, [e.target.name]: e.target.value}));\n  };\n\n  const upload = async (file ) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (user) => {\n      return makeRequest.put(\"/users\", user);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"user\"]);\n      },\n    }\n  );\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n  \n    let coverUrl;\n    let profileUrl;\n    coverUrl = cover ? await upload(cover) : user.coverpic;\n    profileUrl = profile ? await upload(profile) : user.profilepic;\n    \n    const updatedInfo = {\n      coverpic: coverUrl,\n      profilepic: profileUrl\n    };\n  \n    // Only include fields in the mutation that have values\n    for (let key in inputs) {\n      if (inputs[key].trim()) { // Check if the string is not empty or just whitespace\n        updatedInfo[key] = inputs[key];\n      }\n    }\n  \n    mutation.mutate(updatedInfo);\n    setOpenUpdate(false);\n    setCover(null);\n    setProfile(null);\n  }\n  \n  return (\n    <div className=\"update\">\n      <span>Update</span>\n\n      <form action=\"\">\n        <span>coverpicture</span>\n<input type=\"file\" onChange={e=>setCover(e.target.files[0])}/>\n<span>profilepicture</span>\n<input type=\"file\" onChange={e=>setProfile(e.target.files[0])}/>\n\n<input type=\"text\" name=\"name\" onChange={handleChange}/>\n<input type=\"text\" name=\"website\" onChange={handleChange}/>\n<input type=\"text\" name=\"city\" onChange={handleChange}/>\n<button onClick={handleClick}>submit</button>\n      </form>\n\n<button onClick={()=>setOpenUpdate(false)}>x</button>\n    </div>\n    \n  )\n}\nexport default Update"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}