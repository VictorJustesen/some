{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postid\n}) => {\n  _s();\n  const [desc, setDesc] = useState(\"\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Move the useQuery hook here instead of inside the comments function.\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postid=\" + postid).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comments\", newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const deleteMutation = useMutation(postid => {\n    return makeRequest.delete(\"/comments/\" + commentid);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"posts\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postid\n    });\n    setDesc(\"\");\n    //console.log(\"./upload/\"+currentUser)\n  };\n\n  const handleDelete = commentId => {\n    deleteMutation.mutate(commentId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/upload/\" + currentUser.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\",\n        onChange: e => setDesc(e.target.value),\n        value: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./upload/\" + comment.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timeago\",\n          children: moment(comment.createdat).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete\",\n          children: [/*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n            onClick: () => setMenuOpen(!menuOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"4Cnd/9oQyD27mk27DWxDSm6tPF8=\", false, function () {\n  return [useQuery, useQueryClient, useMutation, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["AuthContext","useContext","useState","useQuery","useMutation","useQueryClient","makeRequest","moment","MoreHorizIcon","jsxDEV","_jsxDEV","Comments","postid","_s","desc","setDesc","menuOpen","setMenuOpen","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","deleteMutation","delete","commentid","handleClick","e","preventDefault","mutate","handleDelete","commentId","className","children","src","profilepic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","onClick","map","comment","name","createdat","fromNow","id","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext, useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\"\n\nconst Comments = ({ postid }) => {\n    const [desc, setDesc] = useState(\"\")\n    const[menuOpen,setMenuOpen]=useState(false)\n    const { currentUser } = useContext(AuthContext);\n    \n    // Move the useQuery hook here instead of inside the comments function.\n    const { isLoading, error, data } = useQuery([\"comments\"], () =>\n        makeRequest.get(\"/comments?postid=\" + postid).then((res) => {\n            return res.data;\n        })\n    );\n\n    const queryClient = useQueryClient();\n\n    const mutation = useMutation(\n      (newComment) => {\n        return makeRequest.post(\"/comments\", newComment);\n      },\n      {\n        onSuccess: () => {\n          // Invalidate and refetch\n          queryClient.invalidateQueries([\"comments\"]);\n        },\n      }\n    );\n  \n    const deleteMutation = useMutation(\n        (postid) => {\n          return makeRequest.delete(\"/comments/\" + commentid);\n        },\n        {\n          onSuccess: () => {\n            // Invalidate and refetch\n            queryClient.invalidateQueries([\"posts\"]);\n          },\n        }\n      );\n    \n    const handleClick = async (e) => {\n      e.preventDefault();\n      \n      mutation.mutate({ desc, postid });\n      setDesc(\"\");\n     //console.log(\"./upload/\"+currentUser)\n     \n    };\n  \n    const handleDelete = (commentId) => {\n        deleteMutation.mutate(commentId);\n    };\n    return (\n        <div className=\"comments\">\n            <div className=\"write\">\n                <img src={\"/upload/\"+currentUser.profilepic} alt=\"picture\" />\n                <input type=\"text\"\n                 placeholder=\"Write a comment\" \n                 onChange={e=>setDesc(e.target.value)}\n                 value={desc} />\n                <button onClick={handleClick}>Send</button>\n            </div>\n            {isLoading ? (\n                \"loading\"\n            ) : (\n                data.map(comment => (\n                    <div key={comment.id} className=\"comment\">\n                        <img src={\"./upload/\"+comment.profilepic} alt=\"picture\" />\n                        <div className=\"info\">\n                            <span>{comment.name}</span>\n                            <p>{comment.desc}</p>\n                        </div>\n                        \n                        <div>\n                            <span className=\"timeago\">\n                                {moment(comment.createdat).fromNow()}\n\n                            </span>\n\n                            <div className='delete'>\n                             <MoreHorizIcon onClick={()=>setMenuOpen(!menuOpen)}/>\n                            {menuOpen && <button onClick={handleDelete}>delete</button>}\n                             </div>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}