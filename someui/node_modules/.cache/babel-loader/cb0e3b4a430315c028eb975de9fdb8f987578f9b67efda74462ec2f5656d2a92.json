{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postid\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  // Move the useQuery hook here instead of inside the comments function.\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postid=\" + postid).then(res => {\n    return res.data;\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilepic,\n        alt: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timeago\",\n        children: moment(comment.createdat).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), \"a\"]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"hCTqPi1NtSfQ11VAuVkotC8i7j8=\", false, function () {\n  return [useQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["AuthContext","useContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","postid","_s","currentUser","isLoading","error","data","get","then","res","className","children","src","profilepic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","comment","name","desc","createdat","fromNow","id","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/Code/Projects/some/someui/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useContext } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\n\nconst Comments = ({ postid }) => {\n    const { currentUser } = useContext(AuthContext);\n    \n    // Move the useQuery hook here instead of inside the comments function.\n    const { isLoading, error, data } = useQuery([\"comments\"], () =>\n        makeRequest.get(\"/comments?postid=\" + postid).then((res) => {\n            return res.data;\n        })\n    );\n\n    return (\n        <div className=\"comments\">\n            <div className=\"write\">\n                <img src={currentUser.profilepic} alt=\"picture\" />\n                <input type=\"text\" placeholder=\"Write a comment\" />\n                <button>Send</button>\n            </div>\n            {isLoading ? (\n                \"loading\"\n            ) : (\n                data.map(comment => (\n                    <div key={comment.id} className=\"comment\">\n                        <img src={comment.profilepic} alt=\"picture\" />\n                        <div className=\"info\">\n                            <span>{comment.name}</span>\n                            <p>{comment.desc}</p>\n                        </div>\n                        <span className=\"timeago\">\n                            {moment(comment.createdat).fromNow()}\n                        </span>a\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}